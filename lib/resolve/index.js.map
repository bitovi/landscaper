{"version":3,"sources":["resolve/index.js"],"names":["getInfo","getExecutor","resolvers","modName","options","resolver","find","r","isMatch","reject","Error"],"mappings":";;;;;;;;;;QAKgBA,O,GAAAA,O;QAQAC,W,GAAAA,W;;AAbhB;;;;AACA;;;;;;AAEA,IAAMC,YAAY,+BAAlB;;AAEO,SAASF,OAAT,CAAkBG,OAAlB,EAA2BC,OAA3B,EAAoC;AACzC,MAAMC,WAAWH,UAAUI,IAAV,CAAe;AAAA,WAAKC,EAAEC,OAAF,CAAUL,OAAV,CAAL;AAAA,GAAf,CAAjB;AACA,MAAI,CAACE,QAAL,EAAe;AACb,WAAO,kBAAQI,MAAR,CAAe,IAAIC,KAAJ,iCAAwCP,OAAxC,CAAf,CAAP;AACD;AACD,SAAOE,SAASL,OAAT,CAAiBG,OAAjB,EAA0BC,OAA1B,CAAP;AACD;;AAEM,SAASH,WAAT,CAAsBE,OAAtB,EAA+BC,OAA/B,EAAwC;AAC7C,MAAMC,WAAWH,UAAUI,IAAV,CAAe;AAAA,WAAKC,EAAEC,OAAF,CAAUL,OAAV,CAAL;AAAA,GAAf,CAAjB;AACA,MAAI,CAACE,QAAL,EAAe;AACb,WAAO,kBAAQI,MAAR,CAAe,IAAIC,KAAJ,iCAAwCP,OAAxC,CAAf,CAAP;AACD;AACD,SAAOE,SAASJ,WAAT,CAAqBE,OAArB,EAA8BC,OAA9B,CAAP;AACD","file":"index.js","sourcesContent":["import gist from './gist'\nimport npm from './npm'\n\nconst resolvers = [gist, npm]\n\nexport function getInfo (modName, options) {\n  const resolver = resolvers.find(r => r.isMatch(modName))\n  if (!resolver) {\n    return Promise.reject(new Error(`No resolver found for URL: ${modName}`))\n  }\n  return resolver.getInfo(modName, options)\n}\n\nexport function getExecutor (modName, options) {\n  const resolver = resolvers.find(r => r.isMatch(modName))\n  if (!resolver) {\n    return Promise.reject(new Error(`No resolver found for URL: ${modName}`))\n  }\n  return resolver.getExecutor(modName, options)\n}\n"]}