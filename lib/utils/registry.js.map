{"version":3,"sources":["utils/registry.js"],"names":["packageUrl","makeJsonRequest","getInfoForPackage","name","https","url","resolve","reject","fail","Error","msg","get","res","statusCode","body","on","text","toString","length","result","JSON","parse","error"],"mappings":";;;;;;;;;;QAEgBA,U,GAAAA,U;QAIAC,e,GAAAA,e;QA6BAC,iB,GAAAA,iB;;AAnChB;;;;;;AAEO,SAASF,UAAT,CAAqBG,IAArB,EAA2B;AAChC,yCAAqCA,IAArC;AACD;;AAEM,SAASF,eAAT,CAA0BG,KAA1B,EAAiCC,GAAjC,EAAsC;AAC3C,SAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,OAAO,SAAPA,IAAO;AAAA,aAAOD,OAAO,IAAIE,KAAJ,CAAaJ,GAAb,UAAqBK,GAArB,CAAP,CAAP;AAAA,KAAb;;AAEAN,UAAMO,GAAN,CAAUN,GAAV,EAAe,eAAO;AACpB,UAAIO,IAAIC,UAAJ,IAAkB,GAAtB,EAA2B;AACzB,eAAOL,6CAA2CI,IAAIC,UAA/C,CAAP;AACD;;AAED,UAAIC,OAAO,EAAX;AACAF,UAAIG,EAAJ,CAAO,MAAP,EAAe,gBAAQ;AACrBD,gBAAQE,KAAKC,QAAL,EAAR;AACD,OAFD;AAGAL,UAAIG,EAAJ,CAAO,KAAP,EAAc,YAAM;AAClB,YAAI,CAACD,KAAKI,MAAV,EAAkB;AAChB,iBAAOV,wBAAP;AACD;;AAED,YAAI;AACF,cAAMW,SAASC,KAAKC,KAAL,CAAWP,IAAX,CAAf;AACAR,kBAAQa,MAAR;AACD,SAHD,CAGE,OAAOG,KAAP,EAAc;AACdd,uDAA2Cc,KAA3C;AACD;AACF,OAXD;AAYD,KArBD,EAqBGP,EArBH,CAqBM,OArBN,EAqBeR,MArBf;AAsBD,GAzBM,CAAP;AA0BD;;AAEM,SAASL,iBAAT,CAA4BC,IAA5B,EAAkC;AACvC,SAAOF,iCAAuBD,WAAWG,IAAX,CAAvB,CAAP;AACD","file":"registry.js","sourcesContent":["import https from 'https'\n\nexport function packageUrl (name) {\n  return `https://registry.npmjs.com/${name}`\n}\n\nexport function makeJsonRequest (https, url) {\n  return new Promise((resolve, reject) => {\n    const fail = msg => reject(new Error(`${url}: ${msg}`))\n\n    https.get(url, res => {\n      if (res.statusCode >= 400) {\n        return fail(`NPM registry returning status code ${res.statusCode}`)\n      }\n\n      let body = ''\n      res.on('data', text => {\n        body += text.toString()\n      })\n      res.on('end', () => {\n        if (!body.length) {\n          return fail(`No registry info`)\n        }\n\n        try {\n          const result = JSON.parse(body)\n          resolve(result)\n        } catch (error) {\n          fail(`Registry not returning valid JSON: ${error}`)\n        }\n      })\n    }).on('error', reject)\n  })\n}\n\nexport function getInfoForPackage (name) {\n  return makeJsonRequest(https, packageUrl(name))\n}\n"]}